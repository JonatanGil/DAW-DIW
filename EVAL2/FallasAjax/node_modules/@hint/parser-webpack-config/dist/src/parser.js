"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const path = require("path");
const hint_1 = require("hint");
const utils_network_1 = require("@hint/utils-network");
class WebpackConfigParser extends hint_1.Parser {
    constructor(engine) {
        super(engine, 'webpack-config');
        this.configFound = false;
        engine.on('fetch::end::script', this.parseWebpack.bind(this));
        engine.on('scan::end', this.parseEnd.bind(this));
    }
    async parseEnd() {
        if (!this.configFound) {
            await this.engine.emitAsync('parse::error::webpack-config::not-found', {
                error: new Error('webpack.config.js was not found'),
                resource: ''
            });
        }
    }
    async getLocallyInstalledWebpack() {
        try {
            /*
             * HACK: Need to do an import here in order to be capable of mocking
             * when testing the hint.
             */
            const packageJSON = (await Promise.resolve().then(() => require('@hint/utils/dist/src/packages/load-package'))).loadPackage(path.join(process.cwd(), 'node_modules', 'webpack'));
            return packageJSON.version;
        }
        catch (err) {
            return null;
        }
    }
    async parseWebpack(fetchEnd) {
        const resource = fetchEnd.resource;
        const fileName = path.basename(resource);
        /*
         * In webpack documentation, this is the file name they
         * always use: https://webpack.js.org/configuration/
         */
        if (fileName !== 'webpack.config.js') {
            return;
        }
        this.configFound = true;
        await this.engine.emitAsync(`parse::start::webpack-config`, { resource });
        try {
            const config = await Promise.resolve().then(() => require(utils_network_1.asPathString(utils_network_1.getAsUri(resource)))); // `getAsUri(resource)` should not be null as the resource has already been fetched.
            const version = await this.getLocallyInstalledWebpack();
            if (!version) {
                await this.engine.emitAsync('parse::error::webpack-config::not-install', {
                    error: new Error('webpack is not installed'),
                    resource
                });
                return;
            }
            await this.engine.emitAsync('parse::end::webpack-config', {
                config,
                resource,
                version
            });
        }
        catch (err) {
            await this.engine.emitAsync('parse::error::webpack-config::configuration', {
                error: err,
                resource
            });
        }
    }
}
exports.default = WebpackConfigParser;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGFyc2VyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL3BhcnNlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLDZCQUE2QjtBQUc3QiwrQkFBZ0Q7QUFDaEQsdURBQTZEO0FBTTdELE1BQXFCLG1CQUFvQixTQUFRLGFBQTJCO0lBR3hFLFlBQW1CLE1BQW1DO1FBQ2xELEtBQUssQ0FBQyxNQUFNLEVBQUUsZ0JBQWdCLENBQUMsQ0FBQztRQUg1QixnQkFBVyxHQUFZLEtBQUssQ0FBQztRQUtqQyxNQUFNLENBQUMsRUFBRSxDQUFDLG9CQUFvQixFQUFFLElBQUksQ0FBQyxZQUFZLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUM7UUFDOUQsTUFBTSxDQUFDLEVBQUUsQ0FBQyxXQUFXLEVBQUUsSUFBSSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQztJQUNyRCxDQUFDO0lBRU8sS0FBSyxDQUFDLFFBQVE7UUFDbEIsSUFBSSxDQUFDLElBQUksQ0FBQyxXQUFXLEVBQUU7WUFDbkIsTUFBTSxJQUFJLENBQUMsTUFBTSxDQUFDLFNBQVMsQ0FBQyx5Q0FBeUMsRUFBRTtnQkFDbkUsS0FBSyxFQUFFLElBQUksS0FBSyxDQUFDLGlDQUFpQyxDQUFDO2dCQUNuRCxRQUFRLEVBQUUsRUFBRTthQUNmLENBQUMsQ0FBQztTQUNOO0lBQ0wsQ0FBQztJQUVPLEtBQUssQ0FBQywwQkFBMEI7UUFDcEMsSUFBSTtZQUNBOzs7ZUFHRztZQUNILE1BQU0sV0FBVyxHQUFHLENBQUMsMkNBQWEsNENBQTRDLEVBQUMsQ0FBQyxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxHQUFHLEVBQUUsRUFBRSxjQUFjLEVBQUUsU0FBUyxDQUFDLENBQUMsQ0FBQztZQUVsSixPQUFPLFdBQVcsQ0FBQyxPQUFPLENBQUM7U0FDOUI7UUFBQyxPQUFPLEdBQUcsRUFBRTtZQUNWLE9BQU8sSUFBSSxDQUFDO1NBQ2Y7SUFDTCxDQUFDO0lBRU8sS0FBSyxDQUFDLFlBQVksQ0FBQyxRQUFrQjtRQUN6QyxNQUFNLFFBQVEsR0FBRyxRQUFRLENBQUMsUUFBUSxDQUFDO1FBQ25DLE1BQU0sUUFBUSxHQUFHLElBQUksQ0FBQyxRQUFRLENBQUMsUUFBUSxDQUFDLENBQUM7UUFFekM7OztXQUdHO1FBQ0gsSUFBSSxRQUFRLEtBQUssbUJBQW1CLEVBQUU7WUFDbEMsT0FBTztTQUNWO1FBRUQsSUFBSSxDQUFDLFdBQVcsR0FBRyxJQUFJLENBQUM7UUFFeEIsTUFBTSxJQUFJLENBQUMsTUFBTSxDQUFDLFNBQVMsQ0FBQyw4QkFBOEIsRUFBRSxFQUFFLFFBQVEsRUFBRSxDQUFDLENBQUM7UUFFMUUsSUFBSTtZQUNBLE1BQU0sTUFBTSxHQUEwQiwyQ0FBYSw0QkFBWSxDQUFDLHdCQUFRLENBQUMsUUFBUSxDQUFFLENBQUMsRUFBQyxDQUFDLENBQUMsb0ZBQW9GO1lBRTNLLE1BQU0sT0FBTyxHQUFHLE1BQU0sSUFBSSxDQUFDLDBCQUEwQixFQUFFLENBQUM7WUFFeEQsSUFBSSxDQUFDLE9BQU8sRUFBRTtnQkFDVixNQUFNLElBQUksQ0FBQyxNQUFNLENBQUMsU0FBUyxDQUFDLDJDQUEyQyxFQUFFO29CQUNyRSxLQUFLLEVBQUUsSUFBSSxLQUFLLENBQUMsMEJBQTBCLENBQUM7b0JBQzVDLFFBQVE7aUJBQ1gsQ0FBQyxDQUFDO2dCQUVILE9BQU87YUFDVjtZQUVELE1BQU0sSUFBSSxDQUFDLE1BQU0sQ0FBQyxTQUFTLENBQUMsNEJBQTRCLEVBQUU7Z0JBQ3RELE1BQU07Z0JBQ04sUUFBUTtnQkFDUixPQUFPO2FBQ1YsQ0FBQyxDQUFDO1NBQ047UUFBQyxPQUFPLEdBQUcsRUFBRTtZQUNWLE1BQU0sSUFBSSxDQUFDLE1BQU0sQ0FBQyxTQUFTLENBQUMsNkNBQTZDLEVBQUU7Z0JBQ3ZFLEtBQUssRUFBRSxHQUFHO2dCQUNWLFFBQVE7YUFDWCxDQUFDLENBQUM7U0FDTjtJQUNMLENBQUM7Q0FDSjtBQTNFRCxzQ0EyRUMifQ==