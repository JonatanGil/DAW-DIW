/// <reference types="node" />
import * as url from 'url';
/**
 * Receives a string and returns a valid Uris that are either:
 * * file:// if they start with the protocol or exist in the file system
 * * http(s):// if they start with this protocol or are not a valid file
 * * null if not valid
 */
export declare const getAsUri: (source: string) => url.URL | null;
/**
 * Receives an array of string and returns an array of valid Uris that are either:
 * * file:// if they start with the protocol or exist in the file system
 * * http(s):// if they start with this protocol or are not a valid file
 * * null if not valid
 *
 */
export declare const getAsUris: (source: string[]) => url.URL[];
//# sourceMappingURL=as-uri.d.ts.map