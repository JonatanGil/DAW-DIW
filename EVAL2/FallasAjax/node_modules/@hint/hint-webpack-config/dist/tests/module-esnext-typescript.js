"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const path = require("path");
const mock = require("mock-require");
const utils_tests_helpers_1 = require("@hint/utils-tests-helpers");
const utils_fs_1 = require("@hint/utils-fs");
const utils_types_1 = require("@hint/utils-types");
const webpackDestPath = path.join(__dirname, 'fixtures', 'valid', 'package.json');
const webpackV1DestPath = path.join(__dirname, 'fixtures', 'version1', 'package.json');
const webpackConfig = utils_fs_1.loadJSONFile(webpackDestPath);
const webpackV1Config = utils_fs_1.loadJSONFile(webpackV1DestPath);
const hintPath = utils_tests_helpers_1.getHintPath(__filename, true);
const tests = [
    {
        before() {
            const loadPackage = () => {
                return webpackConfig;
            };
            mock('@hint/utils/dist/src/packages/load-package', { loadPackage });
        },
        name: 'If TS configuration is valid and webpack version >=2 should pass',
        path: path.join(__dirname, 'fixtures', 'tsvalid')
    },
    {
        before() {
            const loadPackage = () => {
                return webpackConfig;
            };
            mock('@hint/utils/dist/src/packages/load-package', { loadPackage });
        },
        name: `If TS configuration is not valid, is should fail`,
        path: path.join(__dirname, 'fixtures', 'tsinvalid'),
        reports: [{
                message: 'TypeScript `compilerOptions.module` option should be `esnext`',
                severity: utils_types_1.Severity.error
            }]
    },
    {
        before() {
            const loadPackage = () => {
                return webpackV1Config;
            };
            mock('@hint/utils/dist/src/packages/load-package', { loadPackage });
        },
        name: 'If TS configuration is invalid, but webpack version is < 2, it should pass',
        path: path.join(__dirname, 'fixtures', 'tsinvalid')
    }
];
const generateTest = (testName) => {
    return [
        {
            before() {
                const loadPackage = () => {
                    return webpackConfig;
                };
                mock('@hint/utils/dist/src/packages/load-package', { loadPackage });
            },
            name: testName,
            path: path.join(__dirname, 'fixtures', 'tsvalid')
        }
    ];
};
utils_tests_helpers_1.testLocalHint(hintPath, tests, {
    parsers: ['webpack-config', 'typescript-config'],
    serial: true
});
utils_tests_helpers_1.testLocalHint(hintPath, generateTest(`If 'webpack-config' parser is not in the configuration it should pass`), {
    parsers: [],
    serial: true
});
utils_tests_helpers_1.testLocalHint(hintPath, generateTest(`if 'typescript-config' parser is no in the configuration it should pass`), {
    parsers: ['webpack-config'],
    serial: true
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9kdWxlLWVzbmV4dC10eXBlc2NyaXB0LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vdGVzdHMvbW9kdWxlLWVzbmV4dC10eXBlc2NyaXB0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsNkJBQTZCO0FBQzdCLHFDQUFxQztBQUVyQyxtRUFBc0Y7QUFDdEYsNkNBQThDO0FBQzlDLG1EQUE2QztBQUU3QyxNQUFNLGVBQWUsR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDLFNBQVMsRUFBRSxVQUFVLEVBQUUsT0FBTyxFQUFFLGNBQWMsQ0FBQyxDQUFDO0FBQ2xGLE1BQU0saUJBQWlCLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQyxTQUFTLEVBQUUsVUFBVSxFQUFFLFVBQVUsRUFBRSxjQUFjLENBQUMsQ0FBQztBQUN2RixNQUFNLGFBQWEsR0FBRyx1QkFBWSxDQUFDLGVBQWUsQ0FBQyxDQUFDO0FBQ3BELE1BQU0sZUFBZSxHQUFHLHVCQUFZLENBQUMsaUJBQWlCLENBQUMsQ0FBQztBQUN4RCxNQUFNLFFBQVEsR0FBRyxpQ0FBVyxDQUFDLFVBQVUsRUFBRSxJQUFJLENBQUMsQ0FBQztBQUUvQyxNQUFNLEtBQUssR0FBb0I7SUFDM0I7UUFDSSxNQUFNO1lBQ0YsTUFBTSxXQUFXLEdBQUcsR0FBRyxFQUFFO2dCQUNyQixPQUFPLGFBQWEsQ0FBQztZQUN6QixDQUFDLENBQUM7WUFFRixJQUFJLENBQUMsNENBQTRDLEVBQUUsRUFBRSxXQUFXLEVBQUUsQ0FBQyxDQUFDO1FBQ3hFLENBQUM7UUFDRCxJQUFJLEVBQUUsa0VBQWtFO1FBQ3hFLElBQUksRUFBRSxJQUFJLENBQUMsSUFBSSxDQUFDLFNBQVMsRUFBRSxVQUFVLEVBQUUsU0FBUyxDQUFDO0tBQ3BEO0lBQ0Q7UUFDSSxNQUFNO1lBQ0YsTUFBTSxXQUFXLEdBQUcsR0FBRyxFQUFFO2dCQUNyQixPQUFPLGFBQWEsQ0FBQztZQUN6QixDQUFDLENBQUM7WUFFRixJQUFJLENBQUMsNENBQTRDLEVBQUUsRUFBRSxXQUFXLEVBQUUsQ0FBQyxDQUFDO1FBQ3hFLENBQUM7UUFDRCxJQUFJLEVBQUUsa0RBQWtEO1FBQ3hELElBQUksRUFBRSxJQUFJLENBQUMsSUFBSSxDQUFDLFNBQVMsRUFBRSxVQUFVLEVBQUUsV0FBVyxDQUFDO1FBQ25ELE9BQU8sRUFBRSxDQUFDO2dCQUNOLE9BQU8sRUFBRSwrREFBK0Q7Z0JBQ3hFLFFBQVEsRUFBRSxzQkFBUSxDQUFDLEtBQUs7YUFDM0IsQ0FBQztLQUNMO0lBQ0Q7UUFDSSxNQUFNO1lBQ0YsTUFBTSxXQUFXLEdBQUcsR0FBRyxFQUFFO2dCQUNyQixPQUFPLGVBQWUsQ0FBQztZQUMzQixDQUFDLENBQUM7WUFFRixJQUFJLENBQUMsNENBQTRDLEVBQUUsRUFBRSxXQUFXLEVBQUUsQ0FBQyxDQUFDO1FBQ3hFLENBQUM7UUFDRCxJQUFJLEVBQUUsNEVBQTRFO1FBQ2xGLElBQUksRUFBRSxJQUFJLENBQUMsSUFBSSxDQUFDLFNBQVMsRUFBRSxVQUFVLEVBQUUsV0FBVyxDQUFDO0tBQ3REO0NBQ0osQ0FBQztBQUVGLE1BQU0sWUFBWSxHQUFHLENBQUMsUUFBZ0IsRUFBbUIsRUFBRTtJQUN2RCxPQUFPO1FBQ0g7WUFDSSxNQUFNO2dCQUNGLE1BQU0sV0FBVyxHQUFHLEdBQUcsRUFBRTtvQkFDckIsT0FBTyxhQUFhLENBQUM7Z0JBQ3pCLENBQUMsQ0FBQztnQkFFRixJQUFJLENBQUMsNENBQTRDLEVBQUUsRUFBRSxXQUFXLEVBQUUsQ0FBQyxDQUFDO1lBQ3hFLENBQUM7WUFDRCxJQUFJLEVBQUUsUUFBUTtZQUNkLElBQUksRUFBRSxJQUFJLENBQUMsSUFBSSxDQUFDLFNBQVMsRUFBRSxVQUFVLEVBQUUsU0FBUyxDQUFDO1NBQ3BEO0tBQ0osQ0FBQztBQUNOLENBQUMsQ0FBQztBQUVGLG1DQUFhLENBQUMsUUFBUSxFQUFFLEtBQUssRUFBRTtJQUMzQixPQUFPLEVBQUUsQ0FBQyxnQkFBZ0IsRUFBRSxtQkFBbUIsQ0FBQztJQUNoRCxNQUFNLEVBQUUsSUFBSTtDQUNmLENBQUMsQ0FBQztBQUNILG1DQUFhLENBQUMsUUFBUSxFQUFFLFlBQVksQ0FBQyx1RUFBdUUsQ0FBQyxFQUFFO0lBQzNHLE9BQU8sRUFBRSxFQUFFO0lBQ1gsTUFBTSxFQUFFLElBQUk7Q0FDZixDQUFDLENBQUM7QUFDSCxtQ0FBYSxDQUFDLFFBQVEsRUFBRSxZQUFZLENBQUMseUVBQXlFLENBQUMsRUFBRTtJQUM3RyxPQUFPLEVBQUUsQ0FBQyxnQkFBZ0IsQ0FBQztJQUMzQixNQUFNLEVBQUUsSUFBSTtDQUNmLENBQUMsQ0FBQyJ9