"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * @fileoverview This hint checks if the site is running any vulnerable library using https://snyk.io database
 */
const fs = require("fs");
const util_1 = require("util");
const groupBy = require("lodash/groupBy");
const semver = require("semver");
const utils_debug_1 = require("@hint/utils-debug");
const utils_fs_1 = require("@hint/utils-fs");
const logger = require("@hint/utils/dist/src/logging");
const utils_network_1 = require("@hint/utils-network");
const utils_types_1 = require("@hint/utils-types");
const meta_1 = require("./meta");
const i18n_import_1 = require("./i18n.import");
const debug = utils_debug_1.debug(__filename);
/*
 * ------------------------------------------------------------------------------
 * Public
 * ------------------------------------------------------------------------------
 */
class NoVulnerableJavascriptLibrariesHint {
    constructor(context) {
        let minimumSeverity = 'low';
        /**
         * Creates the script that will be injected in the connector to detect what libraries are run
         * using [`js-library-detector`](https://npmjs.com/package/js-library-detector).
         */
        const createScript = async () => {
            debug('Creating script to inject');
            const libraryDetector = await utils_fs_1.readFileAsync(require.resolve('js-library-detector'));
            const script = `/*RunInPageContext*/
            (function (){
                ${libraryDetector};

                const libraries = Object.entries(d41d8cd98f00b204e9800998ecf8427e_LibraryDetectorTests);
                const detectedLibraries = libraries.reduce((detected, [name, lib]) => {
                    try {
                        const result = lib.test(window);
                        if (result) {
                            detected.push({
                                name,
                                version: result.version,
                                npmPkgName: lib.npm
                            });
                        }
                    }
                    catch (e) {}

                    return detected;
                }, []);

                return detectedLibraries;
            }())`;
            return script;
        };
        /** Loads the local copy of the snyk database and updates it if the file is older than 24h. */
        const loadSnyk = async () => {
            const oneDay = 3600000 * 24;
            const now = Date.now();
            /*
             * If webpack is true, we are in the browser
             * extension and we don't need to download a
             * new file.
             */
            /* istanbul ignore if */
            if (process.env.webpack) { // eslint-disable-line no-process-env
                return require('./snyk-snapshot.json');
            }
            try {
                const snykDBPath = require.resolve('./snyk-snapshot.json');
                const snykStat = await util_1.promisify(fs.stat)(snykDBPath);
                const modified = new Date(snykStat.mtime).getTime();
                // We check if the file is older than 24h to update it
                /* istanbul ignore if */
                if (now - modified > oneDay) {
                    debug('snkyDB is older than 24h.');
                    debug('Updating snykDB');
                    const res = await utils_network_1.requestAsync('https://snyk.io/partners/api/v2/vulndb/clientside.json');
                    await utils_fs_1.writeFileAsync(snykDBPath, res);
                }
            }
            catch (e) /* istanbul ignore next */ {
                debug(e);
                debug(`Error loading snyk's data`);
            }
            return require('./snyk-snapshot.json');
        };
        const toSeverity = (severity) => {
            switch (severity) {
                case 'high': return utils_types_1.Severity.error;
                case 'medium': return utils_types_1.Severity.warning;
                default:
                    return utils_types_1.Severity.hint;
            }
        };
        /** If a used library has vulnerability that meets the minimum threshold, it gets reported.  */
        const reportLibrary = (library, vulns, resource) => {
            let vulnerabilities = vulns;
            debug('Filtering vulnerabilities');
            let maxSeverity = utils_types_1.Severity.off;
            vulnerabilities = vulnerabilities.filter((vulnerability) => {
                const { severity } = vulnerability;
                let fails = false;
                maxSeverity = Math.max(maxSeverity, toSeverity(severity));
                switch (minimumSeverity) {
                    case 'medium':
                        fails = severity === 'medium' || severity === 'high';
                        break;
                    case 'high':
                        fails = severity === 'high';
                        break;
                    // priority is low, so everything needs to be reported
                    default:
                        fails = true;
                        break;
                }
                return fails;
            });
            if (vulnerabilities.length === 0) {
                return;
            }
            const vulnerabilitiesBySeverity = groupBy(vulnerabilities, 'severity');
            const link = `https://snyk.io/vuln/${vulnerabilities[0].packageManager}:${vulnerabilities[0].packageName}`;
            const detail = Object.entries(vulnerabilitiesBySeverity).map(([severity, entries]) => {
                return `${entries.length} ${severity}`;
            })
                .join(', ');
            if (detail) {
                let message;
                if (vulnerabilities.length === 1) {
                    message = i18n_import_1.getMessage('vulnerability', context.language, [`${library.name}@${library.version}`, vulnerabilities.length.toString(), detail, link]);
                }
                else {
                    message = i18n_import_1.getMessage('vulnerabilities', context.language, [`${library.name}@${library.version}`, vulnerabilities.length.toString(), detail, link]);
                }
                context.report(resource, message, { severity: maxSeverity });
            }
        };
        /** Removes any tags from a version. E.g.: 2.0.0rc --> 2.0.0, 2.0.1-pre --> 2.0.1 */
        const removeTagsFromVersion = (version) => {
            const match = (/(\d+\.?)+/).exec(version);
            return match && match[0];
        };
        /** Given a list of libraries, reports the ones that have known vulnerabilities. */
        const detectAndReportVulnerableLibraries = async (libraries, resource) => {
            // TODO: Check if snykDB is older than 24h and download if so. If not, or if itfails, use local version
            const snykDB = await loadSnyk();
            for (const lib of libraries) {
                const snykInfo = snykDB.npm[lib.npmPkgName];
                // No npm package that snyk could check
                if (!snykInfo) {
                    continue;
                }
                const vulnerabilities = snykInfo.reduce((vulns, vuln) => {
                    const version = removeTagsFromVersion(lib.version) /* istanbul ignore next */ || '';
                    try {
                        vuln.semver.vulnerable.forEach((vulnVersion) => {
                            if (semver.satisfies(version, vulnVersion)) {
                                vulns.push(vuln);
                            }
                        });
                    }
                    catch (e) {
                        logger.error(i18n_import_1.getMessage('versionNotCompliant', context.language, [version, lib.name]));
                    }
                    return vulns;
                }, []);
                reportLibrary(lib, vulnerabilities, resource);
            }
        };
        /** Checks if the JS libraries used by a website have known vulnerabilities. */
        const validateLibraries = async (canEvaluateScript) => {
            const script = await createScript();
            const resource = canEvaluateScript.resource;
            let detectedLibraries;
            try {
                detectedLibraries = (await context.evaluate(script));
            }
            catch (e) {
                let message;
                if (e.message.includes('evaluation exceeded')) {
                    message = i18n_import_1.getMessage('notFastEnough', context.language);
                }
                else {
                    message = i18n_import_1.getMessage('errorExecuting', context.language, e.message);
                }
                message = i18n_import_1.getMessage('tryAgainLater', context.language, message);
                context.report(resource, message, { severity: utils_types_1.Severity.warning });
                debug('Error executing script', e);
                return;
            }
            // No libraries detected, nothing to report
            if (detectedLibraries.length === 0) {
                return;
            }
            await detectAndReportVulnerableLibraries(detectedLibraries, canEvaluateScript.resource);
            return;
        };
        minimumSeverity = (context.hintOptions && context.hintOptions.severity) || 'low';
        context.on('can-evaluate::script', validateLibraries);
    }
}
exports.default = NoVulnerableJavascriptLibrariesHint;
NoVulnerableJavascriptLibrariesHint.meta = meta_1.default;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGludC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9oaW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUE7O0dBRUc7QUFDSCx5QkFBeUI7QUFDekIsK0JBQWlDO0FBRWpDLDBDQUEyQztBQUMzQyxpQ0FBaUM7QUFFakMsbURBQStDO0FBQy9DLDZDQUErRDtBQUMvRCx1REFBdUQ7QUFDdkQsdURBQW1EO0FBSW5ELG1EQUE2QztBQUk3QyxpQ0FBMEI7QUFDMUIsK0NBQTJDO0FBRTNDLE1BQU0sS0FBSyxHQUFHLG1CQUFDLENBQUMsVUFBVSxDQUFDLENBQUM7QUFJNUI7Ozs7R0FJRztBQUVILE1BQXFCLG1DQUFtQztJQUlwRCxZQUFtQixPQUFvQjtRQUVuQyxJQUFJLGVBQWUsR0FBRyxLQUFLLENBQUM7UUFFNUI7OztXQUdHO1FBQ0gsTUFBTSxZQUFZLEdBQUcsS0FBSyxJQUFxQixFQUFFO1lBQzdDLEtBQUssQ0FBQywyQkFBMkIsQ0FBQyxDQUFDO1lBQ25DLE1BQU0sZUFBZSxHQUFHLE1BQU0sd0JBQWEsQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLHFCQUFxQixDQUFDLENBQUMsQ0FBQztZQUVwRixNQUFNLE1BQU0sR0FBRzs7a0JBRVQsZUFBZTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7aUJBb0JoQixDQUFDO1lBRU4sT0FBTyxNQUFNLENBQUM7UUFDbEIsQ0FBQyxDQUFDO1FBRUYsOEZBQThGO1FBQzlGLE1BQU0sUUFBUSxHQUFHLEtBQUssSUFBSSxFQUFFO1lBQ3hCLE1BQU0sTUFBTSxHQUFHLE9BQU8sR0FBRyxFQUFFLENBQUM7WUFDNUIsTUFBTSxHQUFHLEdBQUcsSUFBSSxDQUFDLEdBQUcsRUFBRSxDQUFDO1lBRXZCOzs7O2VBSUc7WUFDSCx3QkFBd0I7WUFDeEIsSUFBSSxPQUFPLENBQUMsR0FBRyxDQUFDLE9BQU8sRUFBRSxFQUFFLHFDQUFxQztnQkFDNUQsT0FBTyxPQUFPLENBQUMsc0JBQXNCLENBQUMsQ0FBQzth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