"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * @fileoverview `typescript-config/import-helpers` checks if the property `importHelpers`
 * is enabled in the TypeScript configuration file (i.e `tsconfig.json`) to reduce the
 * output size.
 */
const path = require("path");
const utils_types_1 = require("@hint/utils-types");
const utils_debug_1 = require("@hint/utils-debug");
const config_checker_1 = require("./helpers/config-checker");
const import_helpers_1 = require("./meta/import-helpers");
const i18n_import_1 = require("./i18n.import");
const debug = utils_debug_1.debug(__filename);
/*
 * ------------------------------------------------------------------------------
 * Public
 * ------------------------------------------------------------------------------
 */
class TypeScriptConfigImportHelpers {
    constructor(context) {
        const validate = config_checker_1.configChecker('compilerOptions.importHelpers', true, 'importHelpers', context, utils_types_1.Severity.warning);
        const validateTslibInstalled = async (evt) => {
            const { resource } = evt;
            const pathToTslib = path.join(process.cwd(), 'node_modules', 'tslib');
            debug(`Searching "tslib" in ${pathToTslib}`);
            try {
                /*
                 * HACK: Need to do an import here in order to be capable of mocking
                 * when testing the hint.
                 */
                (await Promise.resolve().then(() => require('@hint/utils/dist/src/packages/load-package'))).loadPackage(pathToTslib);
                debug(`"tslib" found`);
            }
            catch (e) {
                debug(e);
                context.report(resource, i18n_import_1.getMessage('couldNotFindTSLib', context.language), { severity: utils_types_1.Severity.error });
            }
        };
        context.on('parse::end::typescript-config', validate);
        context.on('parse::end::typescript-config', validateTslibInstalled);
    }
}
exports.default = TypeScriptConfigImportHelpers;
TypeScriptConfigImportHelpers.meta = import_helpers_1.default;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW1wb3J0LWhlbHBlcnMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvaW1wb3J0LWhlbHBlcnMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7OztHQUlHO0FBQ0gsNkJBQTZCO0FBRzdCLG1EQUE2QztBQUU3QyxtREFBK0M7QUFFL0MsNkRBQXlEO0FBRXpELDBEQUF5QztBQUN6QywrQ0FBMkM7QUFFM0MsTUFBTSxLQUFLLEdBQW9CLG1CQUFDLENBQUMsVUFBVSxDQUFDLENBQUM7QUFFN0M7Ozs7R0FJRztBQUVILE1BQXFCLDZCQUE2QjtJQUc5QyxZQUFtQixPQUE0QztRQUMzRCxNQUFNLFFBQVEsR0FBRyw4QkFBYSxDQUFDLCtCQUErQixFQUFFLElBQUksRUFBRSxlQUFlLEVBQUUsT0FBTyxFQUFFLHNCQUFRLENBQUMsT0FBTyxDQUFDLENBQUM7UUFFbEgsTUFBTSxzQkFBc0IsR0FBRyxLQUFLLEVBQUUsR0FBWSxFQUFFLEVBQUU7WUFDbEQsTUFBTSxFQUFFLFFBQVEsRUFBRSxHQUFHLEdBQUcsQ0FBQztZQUV6QixNQUFNLFdBQVcsR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxHQUFHLEVBQUUsRUFBRSxjQUFjLEVBQUUsT0FBTyxDQUFDLENBQUM7WUFFdEUsS0FBSyxDQUFDLHdCQUF3QixXQUFXLEVBQUUsQ0FBQyxDQUFDO1lBRTdDLElBQUk7Z0JBQ0E7OzttQkFHRztnQkFDSCxDQUFDLDJDQUFhLDRDQUE0QyxFQUFDLENBQUMsQ0FBQyxXQUFXLENBQUMsV0FBVyxDQUFDLENBQUM7Z0JBQ3RGLEtBQUssQ0FBQyxlQUFlLENBQUMsQ0FBQzthQUMxQjtZQUFDLE9BQU8sQ0FBQyxFQUFFO2dCQUNSLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQztnQkFFVCxPQUFPLENBQUMsTUFBTSxDQUNWLFFBQVEsRUFDUix3QkFBVSxDQUFDLG1CQUFtQixFQUFFLE9BQU8sQ0FBQyxRQUFRLENBQUMsRUFDakQsRUFBRSxRQUFRLEVBQUUsc0JBQVEsQ0FBQyxLQUFLLEVBQUUsQ0FDL0IsQ0FBQzthQUNMO1FBQ0wsQ0FBQyxDQUFDO1FBRUYsT0FBTyxDQUFDLEVBQUUsQ0FBQywrQkFBK0IsRUFBRSxRQUFRLENBQUMsQ0FBQztRQUN0RCxPQUFPLENBQUMsRUFBRSxDQUFDLCtCQUErQixFQUFFLHNCQUFzQixDQUFDLENBQUM7SUFDeEUsQ0FBQzs7QUFqQ0wsZ0RBa0NDO0FBakMwQixrQ0FBSSxHQUFHLHdCQUFJLENBQUMifQ==