"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * @fileoverview `typescript-config/target` warns against providing a `compilerOptions.target`
 * in the TypeScript configuration file (i.e `tsconfig.json`) not optimized for the defined
 * `browserslist` values.
 */
const path = require("path");
const utils_types_1 = require("@hint/utils-types");
const utils_1 = require("@hint/utils");
const target_1 = require("./meta/target");
const i18n_import_1 = require("./i18n.import");
const config_checker_1 = require("./helpers/config-checker");
class TypeScriptConfigTarget {
    constructor(context) {
        const Targets = new Map([
            ['es3', 'ES3'],
            ['es5', 'ES5'],
            ['es6', 'ES2015'],
            ['es2015', 'ES2015'],
            ['es2016', 'ES2016'],
            ['es2017', 'ES2017'],
            ['es2018', 'ES2018'],
            ['esnext', 'ESNext'],
            ['latest', 'ESNext']
        ]);
        /**
         * ES compatibility matrix. For each version of ES, it enumerates the minimum browser with
         * acceptable support.
         *
         * Data obtained from:
         * * http://kangax.github.io/compat-table/es5/
         * * http://kangax.github.io/compat-table/es6/
         * * http://kangax.github.io/compat-table/es2016plus/
         * * http://2ality.com/2011/02/es5-shim-use-ecmascript-5-in-older.html
         * * https://www.chromestatus.com/features#ES6
         */
        const compatMatrix = {
            es5: {
                chrome: 5,
                edge: 12,
                firefox: 4,
                ie: 9,
                ie_mob: 9,
                opera: 44,
                safari: 5
            },
            es2015: {
                chrome: 49,
                edge: 13,
                firefox: 37,
                ie: 'none',
                ie_mob: 'none',
                opera: 44,
                safari: 10
            },
            es2016: {
                chrome: 57,
                edge: 14,
                firefox: 52,
                ie: 'none',
                ie_mob: 'none',
                opera: 44,
                safari: 10.1
            },
            es2017: {
                chrome: 58,
                edge: 16,
                firefox: 53,
                ie: 'none',
                ie_mob: 'none',
                opera: 45,
                safari: 10.1
            }
        };
        const getMajor = (version) => {
            if (typeof version === 'number') {
                return version;
            }
            // Something like "4.4.3-4.4.4" --> 4
            return parseInt(version.split('-')[0].split('.')[0]);
        };
        /**
         * Checks if `version1` is older (i.e.: lower version) than `version2` taking into
         * account ranges and minor versions. E.g.: `4.4.3-4.4.4` will use `4.4.3` to compare
         */
        const isOlder = (version1, version2) => {
            if (typeof version1 === 'number' && typeof version2 === 'number') {
                return version1 < version2;
            }
            // Can't store `typeof` or otherwise TypeScript complains about `includes` not being on `number`
            if (typeof version1 === 'string' && typeof version2 === 'string') {
                if (version1.includes('-') || version2.includes('-')) {
                    const range1 = version1.split('-')[0];
                    const range2 = version2.split('-')[0];
                    if (range1.includes('.') && range2.includes('.')) {
                        const parts1 = range1.split('.');
                        const parts2 = range2.split('.');
                        let older = true;
                        for (let i = 0; i < parts1.length && older; i++) {
                            older = isOlder(parseInt(parts1[i]), parseInt(parts2[i]));
                        }
                        return older;
                    }
                    return isOlder(parseInt(range1), parseInt(range2));
                }
            }
            // If we reach this point we are probably comparing something like "android 62" and "android 4.4.3-4.4.4"
            return isOlder(getMajor(version1), getMajor(version2));
        };
        /** Transforms a browserslist array into an object with the minimum versions of each one */
        const toMiniumBrowser = (targetedBrowsers) => {
            const configuration = targetedBrowsers.reduce((config, browserVersion) => {
                // The format in the array is "browser version". E.g.: "firefox 52"
                const [browser, strVersion] = browserVersion.split(' ');
                const version = strVersion.includes('.') || strVersion.includes('-') ? strVersion : parseInt(strVersion);
                const previousVersion = config[browser];
                if (!previousVersion || isOlder(version, previousVersion)) {
                    config[browser] = version;
                }
                return config;
            }, {});
            return configuration;
        };
        /**
         * Returns the configured normalized target:
         * This is necessary because in the config file the value can be
         * either lowercase or uppercase and some values map to others.
         *
         * * The `es` part will be upper cased (e.g.: ES2015, ESNext)
         * * ES6 --> ES2015
         */
        const normalizeScriptTarget = (target) => {
            return Targets.get(target) || target;
        };
        /**
         * Based on the minimum supported browser configuration passed,
         * determines what's the maximum ES version that can be targetted.
         */
        const getMaxVersion = (minimumBrowsers) => {
            const versions = Object.keys(compatMatrix);
            let maxVersion = 'ES3';
            /**
             * This will check all the ES versions and compare all the
             * browsers from the compat matrix agains the given ones.
             * If there's one in the compat matrix newer than the ones
             * provided, it will fail.
             */
            versions.forEach((version) => {
                /** The list of browsers to take into account for the compat matrix. */
                const browsers = Object.entries(compatMatrix[version]);
                const validates = browsers.reduce((valid, [browser, minimumBrowserVersion]) => {
                    const minimumTargettedBrowserVersion = minimumBrowsers[browser];
                    // The user doesn't care about this browser, there isn't a version
                    if (!minimumTargettedBrowserVersion) {
                        return valid;
                    }
                    /*
                     * The user cares about this browsers but there's no browsers version that supports
                     * this ES release.
                     * E.g.: ES2015 and IE11
                     */
                    if (minimumBrowserVersion === 'none' && minimumTargettedBrowserVersion) {
                        return false;
                    }
                    /**
                     *  `isOlder` checks if it's strictly older. We do
                     * `!isOlder(minimumTargettedBrowserVersion, minimumBrowserVersion)` instead of
                     * `isOlder(minimumBrowserVersion, minimumTargettedBrowserVersion)`
                     * just in case they are the same version
                     */
                    const newer = !isOlder(minimumTargettedBrowserVersion, minimumBrowserVersion);
                    return valid && newer;
                }, true);
                maxVersion = validates ? normalizeScriptTarget(version) : maxVersion;
            });
            return maxVersion;
        };
        const browserslistConfigExists = () => {
            let browserslistFolder;
            try {
                browserslistFolder = utils_1.findPackageRoot(__dirname, '.browserslistrc');
            }
            catch (e) {
                browserslistFolder = null;
            }
            if (browserslistFolder) {
                return true;
            }
            let packageJsonFolder;
            try {
                packageJsonFolder = utils_1.findPackageRoot(__dirname, 'package.json');
            }
            catch (e) {
                packageJsonFolder = null;
            }
            if (packageJsonFolder) {
                const packageJson = require(path.join(packageJsonFolder, 'package.json'));
                return !!packageJson.browserslist;
            }
            return false;
        };
        const validate = (evt) => {
            const { config, getLocation, mergedConfig, originalConfig, resource } = evt;
            const { targetedBrowsers } = context;
            if (!browserslistConfigExists()) {
                return;
            }
            const target = normalizeScriptTarget(config.compilerOptions.target);
            const minimumBrowsers = toMiniumBrowser(targetedBrowsers);
            const messageName = 'target';
            const propertyPath = 'compilerOptions.target';
            const maxESVersion = getMaxVersion(minimumBrowsers);
            if (maxESVersion !== target) {
                const location = config_checker_1.findLocation(propertyPath, mergedConfig, originalConfig, getLocation);
                const message = i18n_import_1.getMessage(messageName, context.language, [maxESVersion, target]);
                context.report(resource, message, {
                    location,
                    severity: utils_types_1.Severity.warning
                });
            }
        };
        context.on('parse::end::typescript-config', validate);
    }
}
exports.default = TypeScriptConfigTarget;
TypeScriptConfigTarget.meta = target_1.default;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGFyZ2V0LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL3RhcmdldC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBOzs7O0dBSUc7QUFDSCw2QkFBNkI7QUFHN0IsbURBQTZDO0FBQzdDLHVDQUE4QztBQUc5QywwQ0FBaUM7QUFDakMsK0NBQTJDO0FBQzNDLDZEQUF3RDtBQXFCeEQsTUFBcUIsc0JBQXNCO0lBR3ZDLFlBQW1CLE9BQTRDO1FBQzNELE1BQU0sT0FBTyxHQUFHLElBQUksR0FBRyxDQUFDO1lBQ3BCLENBQUMsS0FBSyxFQUFFLEtBQUssQ0FBQztZQUNkLENBQUMsS0FBSyxFQUFFLEtBQUssQ0FBQztZQUNkLENBQUMsS0FBSyxFQUFFLFFBQVEsQ0FBQztZQUNqQixDQUFDLFFBQVEsRUFBRSxRQUFRLENBQUM7WUFDcEIsQ0FBQyxRQUFRLEVBQUUsUUFBUSxDQUFDO1lBQ3BCLENBQUMsUUFBUSxFQUFFLFFBQVEsQ0FBQztZQUNwQixDQUFDLFFBQVEsRUFBRSxRQUFRLENBQUM7WUFDcEIsQ0FBQyxRQUFRLEVBQUUsUUFBUSxDQUFDO1lBQ3BCLENBQUMsUUFBUSxFQUFFLFFBQVEsQ0FBQztTQUN2QixDQUFDLENBQUM7UUFFSDs7Ozs7Ozs7OztXQVVHO1FBQ0gsTUFBTSxZQUFZLEdBQWtDO1lBQ2hELEdBQUcsRUFBRTtnQkFDRCxNQUFNLEVBQUUsQ0FBQztnQkFDVCxJQUFJLEVBQUUsRUFBRTtnQkFDUixPQUFPLEVBQUUsQ0FBQztnQkFDVixFQUFFLEVBQUUsQ0FBQztnQkFDTCxNQUFNLEVBQUUsQ0FBQztnQkFDVCxLQUFLLEVBQUUsRUFBRTtnQkFDVCxNQUFNLEVBQUUsQ0FBQzthQUNaO1lBQ0QsTUFBTSxFQUFFO2dCQUNKLE1BQU0sRUFBRSxFQUFFO2dCQUNWLElBQUksRUFBRSxFQUFFO2dCQUNSLE9BQU8sRUFBRSxFQUFFO2dCQUNYLEVBQUUsRUFBRSxNQUFNO2dCQUNWLE1BQU0sRUFBRSxNQUFNO2dCQUNkLEtB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