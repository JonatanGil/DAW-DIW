"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const path = require("path");
const utils_tests_helpers_1 = require("@hint/utils-tests-helpers");
const utils_types_1 = require("@hint/utils-types");
const hintPath = utils_tests_helpers_1.getHintPath(__filename, true);
const tests = [
    {
        name: 'Configuration with "compilerOptions.removeComments = true" should pass',
        path: path.join(__dirname, 'fixtures', 'no-comments', 'valid')
    },
    {
        name: 'Configuration with "compilerOptions.removeComments = false" should fail',
        path: path.join(__dirname, 'fixtures', 'no-comments', 'invalid'),
        reports: [{
                message: 'The compiler option "removeComments" should be enabled to reduce the output size.',
                severity: utils_types_1.Severity.warning
            }]
    },
    {
        name: 'Configuration with "compilerOptions.removeComments = false" in extends should fail',
        path: path.join(__dirname, 'fixtures', 'extends-with-error'),
        reports: [{
                message: 'The compiler option "removeComments" should be enabled to reduce the output size.',
                position: { match: '"../no-comments/invalid/tsconfig.json"' },
                severity: utils_types_1.Severity.warning
            }]
    },
    {
        name: 'Configuration without "compilerOptions" should fail',
        path: path.join(__dirname, 'fixtures', 'no-compiler-options'),
        reports: [{
                message: 'The compiler option "removeComments" should be enabled to reduce the output size.',
                position: { match: '"../no-comments/invalid/tsconfig.json"' },
                severity: utils_types_1.Severity.warning
            }]
    }
];
utils_tests_helpers_1.testLocalHint(hintPath, tests, { parsers: ['typescript-config'] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibm8tY29tbWVudHMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi90ZXN0cy9uby1jb21tZW50cy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLDZCQUE2QjtBQUU3QixtRUFBc0Y7QUFDdEYsbURBQTZDO0FBRTdDLE1BQU0sUUFBUSxHQUFHLGlDQUFXLENBQUMsVUFBVSxFQUFFLElBQUksQ0FBQyxDQUFDO0FBRS9DLE1BQU0sS0FBSyxHQUFvQjtJQUMzQjtRQUNJLElBQUksRUFBRSx3RUFBd0U7UUFDOUUsSUFBSSxFQUFFLElBQUksQ0FBQyxJQUFJLENBQUMsU0FBUyxFQUFFLFVBQVUsRUFBRSxhQUFhLEVBQUUsT0FBTyxDQUFDO0tBQ2pFO0lBQ0Q7UUFDSSxJQUFJLEVBQUUseUVBQXlFO1FBQy9FLElBQUksRUFBRSxJQUFJLENBQUMsSUFBSSxDQUFDLFNBQVMsRUFBRSxVQUFVLEVBQUUsYUFBYSxFQUFFLFNBQVMsQ0FBQztRQUNoRSxPQUFPLEVBQUUsQ0FBQztnQkFDTixPQUFPLEVBQUUsbUZBQW1GO2dCQUM1RixRQUFRLEVBQUUsc0JBQVEsQ0FBQyxPQUFPO2FBQzdCLENBQUM7S0FDTDtJQUNEO1FBQ0ksSUFBSSxFQUFFLG9GQUFvRjtRQUMxRixJQUFJLEVBQUUsSUFBSSxDQUFDLElBQUksQ0FBQyxTQUFTLEVBQUUsVUFBVSxFQUFFLG9CQUFvQixDQUFDO1FBQzVELE9BQU8sRUFBRSxDQUFDO2dCQUNOLE9BQU8sRUFBRSxtRkFBbUY7Z0JBQzVGLFFBQVEsRUFBRSxFQUFFLEtBQUssRUFBRSx3Q0FBd0MsRUFBRTtnQkFDN0QsUUFBUSxFQUFFLHNCQUFRLENBQUMsT0FBTzthQUM3QixDQUFDO0tBQ0w7SUFDRDtRQUNJLElBQUksRUFBRSxxREFBcUQ7UUFDM0QsSUFBSSxFQUFFLElBQUksQ0FBQyxJQUFJLENBQUMsU0FBUyxFQUFFLFVBQVUsRUFBRSxxQkFBcUIsQ0FBQztRQUM3RCxPQUFPLEVBQUUsQ0FBQztnQkFDTixPQUFPLEVBQUUsbUZBQW1GO2dCQUM1RixRQUFRLEVBQUUsRUFBRSxLQUFLLEVBQUUsd0NBQXdDLEVBQUU7Z0JBQzdELFFBQVEsRUFBRSxzQkFBUSxDQUFDLE9BQU87YUFDN0IsQ0FBQztLQUNMO0NBQ0osQ0FBQztBQUVGLG1DQUFhLENBQUMsUUFBUSxFQUFFLEtBQUssRUFBRSxFQUFFLE9BQU8sRUFBRSxDQUFDLG1CQUFtQixDQUFDLEVBQUUsQ0FBQyxDQUFDIn0=