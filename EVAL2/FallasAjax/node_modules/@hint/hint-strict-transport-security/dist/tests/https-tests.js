"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const utils_tests_helpers_1 = require("@hint/utils-tests-helpers");
const utils_types_1 = require("@hint/utils-types");
const common = require("./_common");
const hintPath = utils_tests_helpers_1.getHintPath(__filename);
const defaultTests = [
    {
        name: `HTML page is served over HTTPS without 'Strict-Transport-Security' header specified`,
        reports: [{
                message: common.noHeaderError,
                severity: utils_types_1.Severity.error
            }],
        serverConfig: common.faviconHeaderMaxAgeOnly
    },
    {
        name: `Resource is served over HTTPS without 'Strict-Transport-Security' header specified`,
        reports: [{
                message: common.noHeaderError,
                severity: utils_types_1.Severity.error
            }],
        serverConfig: Object.assign({}, common.faviconHeaderMaxAgeOnly, {
            '/': common.htmlPageWithScriptData,
            '/test.js': ''
        })
    },
    {
        name: `HTML pages is served over HTTPS and 'max-age' defined is too short`,
        reports: [{
                message: common.tooShortErrorDefault,
                severity: utils_types_1.Severity.warning
            }],
        serverConfig: Object.assign({}, common.faviconHeaderMaxAgeOnly, { '/': { headers: common.tooShortHeader } })
    },
    {
        name: `Resource is served over HTTPS and 'max-age' defined is too short`,
        reports: [{
                message: common.tooShortErrorDefault,
                severity: utils_types_1.Severity.warning
            }],
        serverConfig: Object.assign({}, common.faviconHeaderMaxAgeOnly, {
            '/': common.htmlPageWithScriptData,
            '/test.js': { headers: common.tooShortHeader }
        })
    },
    {
        name: `'Strict-Transport-Security' header with 'max-age' bigger than minimum`,
        serverConfig: Object.assign({}, common.faviconHeaderMaxAgeOnly, { '/': { headers: common.maxAgeOnlyHeader } })
    },
    {
        name: `'Strict-Transport-Security' header contains 'includeSubDomains'`,
        serverConfig: Object.assign({}, common.faviconHeaderMaxAgeOnly, { '/': { headers: common.includeSubDomainsHeader } })
    },
    {
        name: `'Strict-Transport-Security' header contains 'preload'`,
        serverConfig: Object.assign({}, common.faviconHeaderMaxAgeOnly, { '/': { headers: common.preloadHeader } })
    },
    {
        name: `'Strict-Transport-Security' header has no 'max-age' directive`,
        reports: [{
                message: common.noMaxAgeError,
                severity: utils_types_1.Severity.error
            }],
        serverConfig: Object.assign({}, common.faviconHeaderMaxAgeOnly, { '/': { headers: common.noMaxAgeHeader } })
    },
    {
        name: `'Strict-Transport-Security' header has a 'max-age' directive in mix cases`,
        serverConfig: Object.assign({}, common.faviconHeaderMaxAgeOnly, { '/': { headers: common.mixCaseHeader } })
    },
    {
        name: `'Strict-Transport-Security' header has multiple 'max-age' directives`,
        reports: [{
                message: common.multipleMaxAgeError,
                severity: utils_types_1.Severity.warning
            }],
        serverConfig: Object.assign({}, common.faviconHeaderMaxAgeOnly, { '/': { headers: common.multipleMaxAgeHeader } })
    },
    {
        name: `'Strict-Transport-Security' header has multiple 'includeSubdomains' directives`,
        reports: [{
                message: common.multipleincludeSubDomainsError,
                severity: utils_types_1.Severity.warning
            }],
        serverConfig: Object.assign({}, common.faviconHeaderMaxAgeOnly, { '/': { headers: common.multipleincludeSubDomainsHeader } })
    },
    {
        name: `'Strict-Transport-Security' header has the wrong delimiter`,
        reports: [{
                message: common.DelimiterwrongFormatError,
                severity: utils_types_1.Severity.error
            }],
        serverConfig: Object.assign({}, common.faviconHeaderMaxAgeOnly, { '/': { headers: common.wrongDelimiterHeader } })
    },
    {
        name: `'Strict-Transport-Security' header that includes letters in the 'max-age' value`,
        reports: [{
                message: common.UnitwrongFormatError,
                severity: utils_types_1.Severity.error
            }],
        serverConfig: Object.assign({}, common.faviconHeaderMaxAgeOnly, { '/': { headers: common.includeUnitMaxAgeHeader } })
    },
    {
        name: `'Strict-Transport-Security' header that wraps 'max-age' value in quotes`,
        serverConfig: Object.assign({}, common.faviconHeaderMaxAgeOnly, { '/': { headers: common.quotedStringHeader } })
    }
];
const configMaxAgeTests = [{
        name: `Change the minimum max-age value`,
        // the max-age that passes before is now too short
        reports: [{
                message: common.generateTooShortError(common.OkayMaxAge + 1),
                severity: utils_types_1.Severity.warning
            }],
        serverConfig: Object.assign({}, common.faviconHeaderMaxAgeOnly, { '/': { headers: common.maxAgeOnlyHeader } })
    }];
const configPreloadTets = [
    {
        name: `The 'Strict-Transport-Security' header doesn't have 'preload' attribute`,
        serverConfig: Object.assign({}, common.faviconHeaderMaxAgeOnly, { '/': { headers: common.maxAgeOnlyHeader } })
    },
    {
        before() {
            common.requestJSONAsyncMock({ status: common.preloaded });
        },
        name: `The site is already on the preload list`,
        serverConfig: Object.assign({}, common.faviconHeaderMaxAgeOnly, { '/': { headers: common.preloadHeader } })
    },
    {
        before() {
            common.requestJSONAsyncMock({ preloadable: common.noErrors, status: common.unknown });
        },
        name: `The site is not on the preload list, and is qualified to be enrolled`,
        serverConfig: Object.assign({}, common.faviconHeaderMaxAgeOnly, { '/': { headers: common.preloadHeader } })
    },
    {
        before() {
            common.requestJSONAsyncMock({ preloadable: common.hasErrors, status: common.unknown });
        },
        name: `The site is not on the preload list, and it isn't qualified to be enrolled`,
        reports: [{
                message: common.notPreloadableError,
                severity: utils_types_1.Severity.error
            }],
        serverConfig: Object.assign({}, common.faviconHeaderMaxAgeOnly, { '/': { headers: common.preloadHeader } })
    },
    {
        before() {
            common.requestJSONAsyncMock({ preloadable: common.hasErrors, status: null });
        },
        name: `Service error with the preload status endpoint`,
        reports: [{
                message: common.statusServiceError,
                severity: utils_types_1.Severity.error
            }],
        serverConfig: Object.assign({}, common.faviconHeaderMaxAgeOnly, { '/': { headers: common.preloadHeader } })
    },
    {
        before() {
            common.requestJSONAsyncMock({ preloadable: null, status: common.unknown });
        },
        name: `Service error with the preload eligibility endpoint`,
        reports: [{
                message: common.preloadableServiceError,
                severity: utils_types_1.Severity.error
            }],
        serverConfig: Object.assign({}, common.faviconHeaderMaxAgeOnly, { '/': { headers: common.preloadHeader } })
    },
    {
        before() {
            common.requestJSONAsyncMock({ status: { status: null } });
        },
        name: `There's a problem with the verification endpoint`,
        reports: [{
                message: common.problemWithVerificationEndpoint,
                severity: utils_types_1.Severity.warning
            }],
        serverConfig: Object.assign({}, common.faviconHeaderMaxAgeOnly, { '/': { headers: common.preloadHeader } })
    }
];
utils_tests_helpers_1.testHint(hintPath, defaultTests, { https: true });
utils_tests_helpers_1.testHint(hintPath, configMaxAgeTests, {
    hintOptions: { minMaxAgeValue: common.OkayMaxAge + 1 },
    https: true
});
utils_tests_helpers_1.testHint(hintPath, configPreloadTets, {
    hintOptions: { checkPreload: true },
    https: true,
    serial: true
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaHR0cHMtdGVzdHMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi90ZXN0cy9odHRwcy10ZXN0cy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLG1FQUE0RTtBQUM1RSxtREFBNkM7QUFFN0Msb0NBQW9DO0FBRXBDLE1BQU0sUUFBUSxHQUFHLGlDQUFXLENBQUMsVUFBVSxDQUFDLENBQUM7QUFFekMsTUFBTSxZQUFZLEdBQWU7SUFDN0I7UUFDSSxJQUFJLEVBQUUscUZBQXFGO1FBQzNGLE9BQU8sRUFBRSxDQUFDO2dCQUNOLE9BQU8sRUFBRSxNQUFNLENBQUMsYUFBYTtnQkFDN0IsUUFBUSxFQUFFLHNCQUFRLENBQUMsS0FBSzthQUMzQixDQUFDO1FBQ0YsWUFBWSxFQUFFLE1BQU0sQ0FBQyx1QkFBdUI7S0FFL0M7SUFDRDtRQUNJLElBQUksRUFBRSxvRkFBb0Y7UUFDMUYsT0FBTyxFQUFFLENBQUM7Z0JBQ04sT0FBTyxFQUFFLE1BQU0sQ0FBQyxhQUFhO2dCQUM3QixRQUFRLEVBQUUsc0JBQVEsQ0FBQyxLQUFLO2FBQzNCLENBQUM7UUFDRixZQUFZLEVBQUUsTUFBTSxDQUFDLE1BQU0sQ0FBQyxFQUFFLEVBQUUsTUFBTSxDQUFDLHVCQUF1QixFQUFFO1lBQzVELEdBQUcsRUFBRSxNQUFNLENBQUMsc0JBQXNCO1lBQ2xDLFVBQVUsRUFBRSxFQUFFO1NBQ2pCLENBQUM7S0FDTDtJQUNEO1FBQ0ksSUFBSSxFQUFFLG9FQUFvRTtRQUMxRSxPQUFPLEVBQUUsQ0FBQztnQkFDTixPQUFPLEVBQUUsTUFBTSxDQUFDLG9CQUFvQjtnQkFDcEMsUUFBUSxFQUFFLHNCQUFRLENBQUMsT0FBTzthQUM3QixDQUFDO1FBQ0YsWUFBWSxFQUFFLE1BQU0sQ0FBQyxNQUFNLENBQUMsRUFBRSxFQUFFLE1BQU0sQ0FBQyx1QkFBdUIsRUFBRSxFQUFFLEdBQUcsRUFBRSxFQUFFLE9BQU8sRUFBRSxNQUFNLENBQUMsY0FBYyxFQUFFLEVBQUUsQ0FBQztL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