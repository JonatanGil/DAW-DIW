"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const mock = require("mock-require");
const utils_create_server_1 = require("@hint/utils-create-server");
const utilsNetwork = require("@hint/utils-network");
exports.OkayMaxAge = 31536000; // a max-age value larger than the minimum
exports.smallMaxAge = 1; // a max-age value less than the minimum
exports.defaultMinimum = 10886400; // default value of minimum
exports.stsHeader = 'strict-transport-security';
// headers that will pass
exports.maxAgeOnlyHeader = { [exports.stsHeader]: `max-age=${exports.OkayMaxAge}` };
exports.includeSubDomainsHeader = { [exports.stsHeader]: `max-age=${exports.OkayMaxAge}; includeSubDomains` };
exports.preloadHeader = { [exports.stsHeader]: `max-age=${exports.OkayMaxAge}; includeSubDomains; preload` };
exports.mixCaseHeader = { [exports.stsHeader]: `Max-Age=${exports.OkayMaxAge}` };
exports.quotedStringHeader = { [exports.stsHeader]: `max-age="${exports.OkayMaxAge}"; includeSubDomains; preload` };
// headers that will fail
exports.tooShortHeader = { [exports.stsHeader]: `max-age=${exports.smallMaxAge}` };
exports.noMaxAgeHeader = { [exports.stsHeader]: `maxage=${exports.OkayMaxAge}; includeSubDomains; preload` };
exports.multipleMaxAgeHeader = { [exports.stsHeader]: `max-age=${exports.OkayMaxAge}; max-age=${exports.OkayMaxAge + 1}` };
exports.multipleincludeSubDomainsHeader = { [exports.stsHeader]: `includeSubDomains; max-age=${exports.OkayMaxAge}; includeSubDomains` };
exports.wrongDelimiterHeader = { [exports.stsHeader]: `max-age=${exports.OkayMaxAge}, includeSubDomains; preload` };
exports.includeUnitMaxAgeHeader = { [exports.stsHeader]: `max-age=${exports.OkayMaxAge}s; includeSubDomains; preload` };
// api response
exports.notPreloadableError = `www subdomain does not support HTTPS`;
exports.preloaded = { status: 'preloaded' };
exports.unknown = { status: 'unknown' };
exports.noErrors = { errors: [] };
exports.hasErrors = { errors: [{ message: exports.notPreloadableError }] };
// error messages
exports.generateTooShortError = (value) => {
    return `'${exports.stsHeader}' header 'max-age' value should be more than ${value}`;
};
exports.noHeaderError = `'${exports.stsHeader}' header was not specified`;
exports.noMaxAgeError = `'${exports.stsHeader}' header requires 'max-age' directive`;
exports.multipleMaxAgeError = `'${exports.stsHeader}' header contains more than one 'max-age'`;
exports.multipleincludeSubDomainsError = `'${exports.stsHeader}' header contains more than one 'includesubdomains'`;
exports.tooShortErrorDefault = exports.generateTooShortError(exports.defaultMinimum);
exports.DelimiterwrongFormatError = `'${exports.stsHeader}' header has the wrong format: max-age=31536000, includesubdomains`;
exports.UnitwrongFormatError = `'${exports.stsHeader}' header has the wrong format: max-age=31536000s`;
exports.statusServiceError = `Error with getting preload status for https://localhost/.`;
exports.preloadableServiceError = `Error with getting preload eligibility for https://localhost/.`;
exports.problemWithVerificationEndpoint = `Error with getting preload status for https://localhost/. There might be something wrong with the verification endpoint.`;
// override favicon headers so that it doesn't report in chrome
exports.faviconHeaderMaxAgeOnly = {
    '/': { content: utils_create_server_1.generateHTMLPage() },
    '/favicon.ico': { headers: { [exports.stsHeader]: `max-age=${exports.OkayMaxAge + 100}` } }
};
exports.generateHTMLPageData = (content) => {
    return {
        content,
        headers: exports.maxAgeOnlyHeader // the page itself should pass
    };
};
exports.htmlPageWithScriptData = exports.generateHTMLPageData(utils_create_server_1.generateHTMLPage(undefined, '<script src="test.js"></script>'));
exports.htmlPageWithManifestData = exports.generateHTMLPageData(utils_create_server_1.generateHTMLPage('<link rel="manifest" href="test.webmanifest">'));
exports.requestJSONAsyncMock = (responseObject) => {
    const isHTTPS = () => {
        return true;
    };
    const isRegularProtocol = () => {
        return true;
    };
    const normalizeString = (str = '') => {
        return str.toLowerCase();
    };
    const requestJSONAsync = (uri) => {
        let response;
        if (uri.includes('/api/v2/preloadable')) {
            response = responseObject.preloadable;
        }
        else {
            response = responseObject.status;
        }
        if (!response) {
            return Promise.reject('Error with the verification service.');
        }
        return Promise.resolve(response);
    };
    utilsNetwork.isRegularProtocol = isRegularProtocol;
    utilsNetwork.isHTTPS = isHTTPS;
    utilsNetwork.requestJSONAsync = requestJSONAsync;
    mock('@hint/utils-network', utilsNetwork);
    mock('@hint/utils-string', { normalizeString });
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiX2NvbW1vbi5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3Rlc3RzL19jb21tb24udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxxQ0FBcUM7QUFDckMsbUVBQTZEO0FBQzdELG9EQUFvRDtBQUV2QyxRQUFBLFVBQVUsR0FBRyxRQUFRLENBQUMsQ0FBQywwQ0FBMEM7QUFDakUsUUFBQSxXQUFXLEdBQUcsQ0FBQyxDQUFDLENBQUMsd0NBQXdDO0FBQ3pELFFBQUEsY0FBYyxHQUFHLFFBQVEsQ0FBQyxDQUFDLDJCQUEyQjtBQUN0RCxRQUFBLFNBQVMsR0FBRywyQkFBMkIsQ0FBQztBQUVyRCx5QkFBeUI7QUFDWixRQUFBLGdCQUFnQixHQUFHLEVBQUUsQ0FBQyxpQkFBUyxDQUFDLEVBQUUsV0FBVyxrQkFBVSxFQUFFLEVBQUUsQ0FBQztBQUM1RCxRQUFBLHVCQUF1QixHQUFHLEVBQUUsQ0FBQyxpQkFBUyxDQUFDLEVBQUUsV0FBVyxrQkFBVSxxQkFBcUIsRUFBRSxDQUFDO0FBQ3RGLFFBQUEsYUFBYSxHQUFHLEVBQUUsQ0FBQyxpQkFBUyxDQUFDLEVBQUUsV0FBVyxrQkFBVSw4QkFBOEIsRUFBRSxDQUFDO0FBQ3JGLFFBQUEsYUFBYSxHQUFHLEVBQUUsQ0FBQyxpQkFBUyxDQUFDLEVBQUUsV0FBVyxrQkFBVSxFQUFFLEVBQUUsQ0FBQztBQUN6RCxRQUFBLGtCQUFrQixHQUFHLEVBQUUsQ0FBQyxpQkFBUyxDQUFDLEVBQUUsWUFBWSxrQkFBVSwrQkFBK0IsRUFBRSxDQUFDO0FBRXpHLHlCQUF5QjtBQUNaLFFBQUEsY0FBYyxHQUFHLEVBQUUsQ0FBQyxpQkFBUyxDQUFDLEVBQUUsV0FBVyxtQkFBVyxFQUFFLEVBQUUsQ0FBQztBQUMzRCxRQUFBLGNBQWMsR0FBRyxFQUFFLENBQUMsaUJBQVMsQ0FBQyxFQUFFLFVBQVUsa0JBQVUsOEJBQThCLEVBQUUsQ0FBQztBQUNyRixRQUFBLG9CQUFvQixHQUFHLEVBQUUsQ0FBQyxpQkFBUyxD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